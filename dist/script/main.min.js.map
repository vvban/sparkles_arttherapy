{"version":3,"sources":["script.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","h","f","Error","s","done","method","arg","delegate","maybeInvokeDelegate","TypeError","y","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","p","l","call","GeneratorFunction","GeneratorFunctionPrototype","d","this","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","callInvokeWithMethodAndArg","invoke","_typeof","resolve","__await","then","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","Array","from","test","isArray","window","onload","is_flip","is_dragging","is_deck_cards_modal_open","deck_id","set_size","number_of_deck","decks_is_built","currentUrl","draggable","interact","position","image_id_array","deck_cards_modal","document","getElementById","desks_list","deck_cards_modal_close_button","cards_desk_scroll_view","cards_desk_scroll_status","cards_desk","cards_line","increase_cards_size_button","decrease_cards_size_button","fullscreen_desk_button","fullscreen_toggle_button","mix_cards_button","flip_cards_button","choose_deck_button","clear_desk_button","sheet","cssRules","createSet","moveCardToDeck","lazyLoadInstance","moveCardToDesk","card_id","new_position","undefined","block","card","createElement","updateDragable","event","setAttribute","style","addEventListener","handleMouseMove","removeEventListener","handleMouseUp","remove","transform","appendChild","update","reflow","handleMouseDown","axis","resizable","listeners","start","top","getComputedStyle","target","bottom","DOMMatrix","x","matrix","m41","m42","move","querySelectorAll","assign","height","concat","modifiers","snap100x100","restriction","edges","min","left","right","width","min_width","max_width","card_ration","rect","aspectRatio","restrictSize","setInterval","max","el","src","alt","temp","classList","clear_deck","innerHTML","indexOf","build_new_deck","index","childElementCount","old_width","getBoundingClientRect","console","clear_desk","new_width","close_deck_cards_modal","body","overflow","_build_decks","_callee","_loop","build_deck_profile","_context2","deck_name","_context","paragraph","fetch","click_fun","response","button","parentElement","data","split","header","text","profile","scrollTo","textContent","add","mix_image_id_array","array","Math","random","snappers","j","floor","_ref","scrollIntoView","build_decks","targets","relativePoints","dx","restrictRect","scrollWidth","clientWidth","scrollHeight","clientHeight","innerText"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * TODO: We can optimize = merge all scripts to one file.\r\n */\r\n\r\nwindow.onload = function () {\r\n\tlet is_flip = false;\r\n\tvar is_dragging = false;\r\n\tlet is_deck_cards_modal_open = false;\r\n\tlet deck_id = \"set1\";\r\n\tlet set_size = 50;\r\n\tlet number_of_deck = 2;\r\n\tlet decks_is_built = false;\r\n\tconst currentUrl = \"https://arttherapyshopbydaniela.github.io/Service-MAC/\";\r\n\r\n\tconst draggable = interact('.draggable')\r\n\tconst position = { \r\n\t\tx: 0, \r\n\t\ty: 0 \r\n\t}\r\n\tconst min_width = 75;\r\n\tconst max_width = 600;\r\n\tconst card_ration = 0.714;\r\n\tconst size_modifier = 0.075;\r\n\r\n\tlet image_id_array = []\r\n\r\n\r\n\tlet deck_cards_modal = document.getElementById(\"deck-of-cards-modal\");\r\n\tlet desks_list = document.getElementById(\"decks-list\");\r\n\tlet deck_cards_modal_close_button = document.getElementById(\"deck-of-cards-modal-button-close\");\r\n\t\r\n\r\n\tlet cards_desk_scroll_view = document.getElementById(\"cards-desk__scroll-view\");\r\n\tlet cards_desk_scroll_status = document.getElementById(\"cards-desk__scroll-status\");\r\n\tlet cards_desk = document.getElementById(\"cards-desk\");\r\n\tlet cards_line = document.getElementById(\"cards-line\");\r\n\r\n\tlet increase_cards_size_button = document.getElementById(\"increase-cards-size-button\");\r\n\tlet decrease_cards_size_button = document.getElementById(\"decrease-cards-size-button\");\r\n\tlet fullscreen_desk_button = document.getElementById(\"fullscreen-desk-button\");\r\n\tlet fullscreen_toggle_button = document.getElementById(\"fullscreen-toggle-button\");\r\n\tlet mix_cards_button = document.getElementById(\"mix-cards-button\");\r\n\tlet flip_cards_button = document.getElementById(\"flip-cards-button\");\r\n\tlet choose_deck_button = document.getElementById(\"choose-deck-button\");\r\n\tlet clear_desk_button = document.getElementById(\"clear-desk-button\");\r\n\r\n\tfunction createSet() {\r\n\t\tlet style = document.getElementById(\"inner-style-from-script\").sheet.cssRules[0];\r\n\t\tstyle.style.backgroundImage = \"url(\\\"\" + currentUrl + 'assets/' + deck_id + \"/profile.jpg\\\")\";\r\n\r\n\t\tfor (let i = 0; i < image_id_array.length; i++) {\r\n\t\t\tmoveCardToDeck(image_id_array[i])\r\n\t\t}\r\n\r\n\t\tlazyLoadInstance.update();\r\n\t}\r\n\r\n\tfunction moveCardToDesk(card_id, new_position = 0) {\r\n\t\tlet block = document.createElement(\"div\")\r\n\t\tlet card = document.createElement(\"span\")\r\n\r\n\t\tblock.setAttribute(\"data-card-id\", card_id.toString())\r\n\t\tblock.classList.add(\"draggable\")\r\n\r\n\t\tcard.style.backgroundImage = \"url(\\\"\" + currentUrl + \"assets/\" + deck_id + \"/\" + card_id + \".jpg\\\")\";\r\n\r\n\t\tblock.appendChild(card)\r\n\r\n\t\tblock.addEventListener('mousedown', \r\n\t\t\thandleMouseDown\r\n\t\t)\r\n\r\n\t\tblock.addEventListener(\"click\", function(event) {\r\n\t\t\tif (is_dragging) {\r\n\t\t\t\tevent.preventDefault()\r\n\t\t\t\tevent.stopImmediatePropagation();\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tblock.remove() // TODO: set timer\r\n\t\t\tmoveCardToDeck(card_id)\r\n\t\t\tlazyLoadInstance.update();\r\n\t\t\timage_id_array.push(card_id)\r\n\t\t})\r\n\r\n\t\t\r\n\t\tblock.style.transform = `translate(${new_position}px, 0px)`\r\n\t\tcards_desk.appendChild(block)\r\n\t\t// Adjust cards position\r\n\t\tdraggable.reflow({ name: 'drag', axis: 'xy' })\r\n\t\r\n\r\n\t\tfunction handleMouseDown(event) {\r\n\t\t\tis_dragging = false;\r\n\t\t\tdocument.addEventListener('mousemove', handleMouseMove);\r\n\t\t\tdocument.addEventListener('mouseup', handleMouseUp);\r\n\t\t}\r\n\t\t\r\n\t\tfunction handleMouseMove(event) {\r\n\t\t\tis_dragging = true;\r\n\t\t}  \r\n\t\t\r\n\t\tfunction handleMouseUp(event) {\r\n\t\t\tdocument.removeEventListener('mousemove', handleMouseMove);\r\n\t\t\tdocument.removeEventListener('mouseup', handleMouseUp);\r\n\t\t}\r\n\r\n\t\tupdateDragable() // TODO: optimize fix -> refer to one specific element\r\n\t}\r\n\r\n\tfunction moveCardToDeck(card_id) {\r\n\t\tlet block = document.createElement(\"div\")\r\n\t\tlet card = document.createElement(\"img\")\r\n\r\n\t\tblock.setAttribute(\"data-flip\", is_flip.toString())\r\n\t\tblock.setAttribute(\"data-card-id\", card_id.toString())\r\n\r\n\t\tcard.alt = \"Image of the metaphorical card\";\r\n\t\tcard.width = 130;\r\n\t\tcard.height = 190;\r\n\t\tif (card_id > 5) {\r\n\t\t\tcard.classList.add(\"lazy\");\r\n\t\t\tcard.setAttribute(\r\n\t\t\t\t\"data-src\",\r\n\t\t\t\tcurrentUrl + \"assets/\" + deck_id + \"/\" + card_id.toString() + \".jpg\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tcard.src = currentUrl + \"assets/\" + deck_id + \"/\" + card_id.toString() + \".jpg\";\r\n\t\t}\r\n\r\n\t\tblock.appendChild(card)\r\n\r\n\t\tblock.addEventListener(\"click\", function() {\r\n\t\t\tlet index = image_id_array.indexOf(card_id)\r\n\t\t\tlet temp = image_id_array.slice(0,index).concat(image_id_array.slice(index+1,image_id_array.length))\r\n\t\t\timage_id_array = temp\r\n\t\t\tblock.remove() // TODO: set timer\r\n\r\n\t\t\tlet new_position = -5 + 40 * cards_desk.childElementCount\r\n\t\t\tmoveCardToDesk(card_id, new_position)\r\n\t\t})\r\n\t\t\r\n\t\tcards_line.appendChild(block)\r\n\t}\r\n\r\n\tfunction build_new_deck() {\r\n\t\tclear_deck()\r\n\t\timage_id_array = [...Array(set_size+1).keys()];\r\n\t\timage_id_array = image_id_array.slice(1, set_size+1)\r\n\t\tcreateSet()\r\n\t}\r\n\r\n\tfunction clear_desk() {\r\n\t\tcards_desk.innerHTML = \"\"\r\n\t}\r\n\r\n\tfunction clear_deck() {\r\n\t\tcards_line.innerHTML = \"\"\r\n\t}\r\n\r\n\tbuild_new_deck()\r\n\r\n\tincrease_cards_size_button.addEventListener(\"click\", function() {\r\n\t\tlet card = document.querySelector(\".draggable\")\r\n\t\tif (card == null) return;\r\n\r\n\t\tlet old_width = card.getBoundingClientRect().width;\r\n\r\n\t\tlet new_width = old_width * (1 + size_modifier);\r\n\t\tif (new_width > max_width) new_width = max_width;\r\n\t\t\telse if (new_width < min_width) new_width = min_width;\r\n\t\tconsole.log(new_width);\r\n\r\n\t\tdocument.querySelectorAll(\".draggable\").forEach((target) => {\r\n\r\n\t\t\tObject.assign(target.style, {\r\n\t\t\t  width: `${new_width}px`,\r\n\t\t\t  height: `${new_width / card_ration}px`,\r\n\t\t\t})\r\n\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tdecrease_cards_size_button.addEventListener(\"click\", function() {\r\n\t\tlet card = document.querySelector(\".draggable\")\r\n\t\tif (card == null) return;\r\n\t\t\r\n\t\tlet old_width = card.getBoundingClientRect().width;\r\n\t\t\r\n\t\tlet new_width = old_width * (1 - size_modifier);\r\n\t\tif (new_width > max_width) new_width = max_width;\r\n\t\t\telse if (new_width < min_width) new_width = min_width;\r\n\t\tconsole.log(new_width);\r\n\r\n\t\tdocument.querySelectorAll(\".draggable\").forEach((target) => {\r\n\r\n\t\t\tObject.assign(target.style, {\r\n\t\t\t  width: `${new_width}px`,\r\n\t\t\t  height: `${new_width / card_ration}px`,\r\n\t\t\t})\r\n\r\n\t\t});\r\n\r\n\t});\r\n\r\n\tclear_desk_button.addEventListener(\"click\", function() {\r\n\t\tclear_desk()\r\n\t\tbuild_new_deck()\r\n\t})\r\n\r\n\tmix_cards_button.addEventListener(\"click\", function() {\r\n\t\tclear_deck()\r\n\t\tmix_image_id_array()\r\n\t\tcreateSet()\r\n\t})\r\n\r\n\tfullscreen_desk_button.addEventListener(\"click\", function() {\r\n\t\tcards_desk_scroll_view.classList.add(\"fullscreen\")\r\n\t\tfullscreen_desk_button.classList.add(\"hide\")\r\n\t\tfullscreen_toggle_button.classList.add(\"show\")\r\n\t\twindow.scrollTo(0, cards_desk.scrollIntoView);\r\n\t})\r\n\r\n\tfullscreen_toggle_button.addEventListener(\"click\", function() {\r\n\t\tcards_desk_scroll_view.classList.remove(\"fullscreen\")\r\n\t\tfullscreen_desk_button.classList.remove(\"hide\")\r\n\t\tfullscreen_toggle_button.classList.remove(\"show\")\r\n\r\n\t\t// Adjust cards position\r\n\t\tdraggable.reflow({ name: 'drag', axis: 'xy' })\r\n\t})\r\n\r\n\tflip_cards_button.addEventListener(\"click\", function() {\r\n\t\tis_flip = !is_flip\r\n\r\n\t\tdocument.querySelectorAll(\"#cards-line div\").forEach ( block => {\r\n\t\t\tblock.setAttribute(\"data-flip\", is_flip.toString())\r\n\t\t})\r\n\t})\r\n\r\n\tchoose_deck_button.addEventListener(\"click\", function() {\r\n\t\tif (!decks_is_built) {\r\n\t\t\tbuild_decks();\r\n\t\t\tdecks_is_built = true;\r\n\t\t}\r\n\t\tis_deck_cards_modal_open = true\r\n\r\n\t\tdeck_cards_modal.setAttribute(\"data-open\", is_deck_cards_modal_open)\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tdocument.body.style.overflow = \"hidden\"\r\n\t})\r\n\r\n\tdeck_cards_modal_close_button.addEventListener(\"click\", close_deck_cards_modal)\r\n\tfunction close_deck_cards_modal() {\r\n\t\tis_deck_cards_modal_open = false\r\n\t\tdeck_cards_modal.setAttribute(\"data-open\", is_deck_cards_modal_open)\r\n\t\tdocument.body.style.overflow = \"\"\r\n\t}\r\n\r\n\tasync function build_decks() {\r\n\t\tfor (let index = 1; index <= number_of_deck; index++) {\r\n\t\t\tlet deck_name = \"set\" + index\r\n\t\t\t\r\n\t\t\tfetch(currentUrl + 'assets/' + deck_name + \"/text.txt\")\r\n\t\t\t\t.then(response => response.text())\r\n\t\t\t\t.then((data) => {\r\n\t\t\t\t\tbuild_deck_profile(deck_name, data.split(\"\\/\\&\\/\"))\r\n\t\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst build_deck_profile = (deck_name, text) => {\r\n\r\n\t\t\t// FIXME: We can OPTIMIZE loading time!!!\r\n\t\t\t/**\r\n\t\t\t * 1 Join text files to one (1 requrest)\r\n\t\t\t */\r\n\r\n\t\t\tlet block = document.createElement(\"div\")\r\n\t\t\tlet profile = document.createElement(\"img\")\r\n\t\t\tlet header = document.createElement(\"p\")\r\n\t\t\tlet paragraph = document.createElement(\"p\")\r\n\t\t\tlet button = document.createElement(\"button\")\r\n\r\n\t\t\tconst click_fun = () => {\r\n\t\t\t\tdeck_id = button.parentElement.getAttribute(\"data-deck-name\")\r\n\t\t\t\tclear_desk()\r\n\t\t\t\tbuild_new_deck()\r\n\t\t\t\tclose_deck_cards_modal()\r\n\t\t\t\twindow.scrollTo(0, document.body.scrollHeight);\r\n\t\t\t}\r\n\r\n\t\t\tblock.setAttribute(\"data-deck-name\", deck_name)\r\n\r\n\t\t\tprofile.src = currentUrl + 'assets/' + deck_name + \"/profile.jpg\"\r\n\t\t\tprofile.alt = \"Cover of a deck of metaphorical cards\";\r\n\t\t\tprofile.addEventListener(\"click\", () => { click_fun(); })\r\n\t\t\t\r\n\t\t\theader.classList.add(\"header\")\r\n\t\t\theader.textContent = text[0]\r\n\r\n\t\t\tparagraph.classList.add(\"paragraph\")\r\n\t\t\tparagraph.textContent = text[1]\r\n\r\n\t\t\tbutton.textContent = \"Use\"\r\n\t\t\tbutton.addEventListener(\"click\", () => { click_fun(); })\r\n\r\n\r\n\t\t\tblock.appendChild(profile)\r\n\t\t\tblock.appendChild(header)\r\n\t\t\tblock.appendChild(paragraph)\r\n\t\t\tblock.appendChild(button)\r\n\t\t\t\r\n\t\t\tdesks_list.appendChild(block)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction mix_image_id_array() {\r\n\t\tconst suffle = (array) => {\r\n\t\t\tfor (let i = array.length - 1; i > 0; i--) {\r\n\t\t\t\tconst j = Math.floor(Math.random() * (i + 1));\r\n\t\t\t\t[array[i], array[j]] = [array[j], array[i]];\r\n\t\t\t}\r\n\t\t\treturn array\r\n\t\t};\r\n\r\n\t\tlet temp = suffle(image_id_array); // Adjust min and max as needed\r\n\t\timage_id_array = temp\r\n\t}\r\n\t  \r\n\tconst snap100x100 = interact.modifiers.snap({\r\n\t\ttargets: [interact.snappers.grid({ x: 20, y: 20 })],\r\n\t\trelativePoints: [{ x: 0.5, y: 0.5 }],\r\n\t})\r\n\r\n\tconst restriction = interact.modifiers.restrictRect({\r\n\t\trestriction: 'parent'\r\n\t})\r\n\r\n\tfunction updateDragable() {\r\n\t\tdraggable\r\n\t\t\t.draggable({\r\n\t\t\t\tlisteners: {\r\n\t\t\t\t\tstart (event) {\r\n\t\t\t\t\t\tconst style = window.getComputedStyle(event.target);\r\n\t\t\t\t\t\tconst matrix = new DOMMatrix(style.transform);\r\n\t\t\t\t\t\tposition.x = matrix.m41\r\n\t\t\t\t\t\tposition.y = matrix.m42\r\n\t\t\t\t\t},\t\r\n\t\t\t\t\tmove (event) { \r\n\t\t\t\t\t\tposition.x += event.dx\r\n\t\t\t\t\t\tposition.y += event.dy\r\n\t\t\t\t\r\n\t\t\t\t\t\tevent.target.style.transform = \r\n\t\t\t\t\t\t\t`translate(${position.x}px, ${position.y}px)`\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tmodifiers: [snap100x100, restriction]\r\n\r\n\t\t\t})\r\n\t\t\t.resizable({\r\n\t\t\t\tedges: { top: false, left: false, bottom: true, right: true },\r\n\t\t\t\tlisteners: {\r\n\t\t\t\t  move: function (event) {\r\n\r\n\t\t\t\t\tdocument.querySelectorAll(\".draggable\").forEach((target) => {\r\n\t\t\t\t\t\tObject.assign(target.style, {\r\n\t\t\t\t\t\t  width: `${event.rect.width}px`,\r\n\t\t\t\t\t\t  height: `${event.rect.height}px`,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t});\r\n\r\n\r\n\t\t\t\t  }\r\n\t\t\t\t},\r\n\t\t\t\tmodifiers: [\r\n\t\t\t\t\tinteract.modifiers.aspectRatio({\r\n\t\t\t\t\t  ratio: card_ration,\r\n\t\t\t\t\t  modifiers: [\r\n\t\t\t\t\t\tinteract.modifiers.restrictSize({ \r\n\t\t\t\t\t\t\tmin: { width: min_width, height: min_width / card_ration },\r\n     \t\t\t\t\t\tmax: { width: max_width, height: max_width / card_ration }\r\n\t\t\t\t\t\t }),\r\n\t\t\t\t\t  ],\r\n\t\t\t\t\t}),\r\n\t\t\t\t  ],\r\n\r\n\t\t\t  })\r\n\t}\r\n\r\n\twindow.addEventListener('resize', () => {\r\n\t\t// Adjust cards position\r\n\t\tdraggable.reflow({ name: 'drag', axis: 'xy' })\r\n\r\n\t});\r\n\r\n\tsetInterval(() => {\r\n\t\tlet el = cards_desk_scroll_view;\r\n\t\tif (el.scrollWidth > el.clientWidth || el.scrollHeight > el.clientHeight) {\r\n\t\t\tcards_desk_scroll_status.innerText = \"Scrollable\";\r\n\t\t} else {\r\n\t\t\tcards_desk_scroll_status.innerText = \"\";\r\n\t\t}\r\n\t\t\r\n\t}, 1000);\r\n\r\n};\r\n\r\n"]}